// Advanced USB Malware Detection Rules

rule Sophisticated_USB_Payload {
    meta:
        description = "Detects sophisticated USB-based malware payloads"
        author = "USBShield Research Team"
        severity = "critical"
        reference = "Internal Threat Research"

    strings:
        // Specific shellcode and payload indicators
        $shellcode_indicator1 = { 
            FC 48 83 E4 F0 E8 ?? ?? ?? ?? 
            41 51 41 50 52 51 56 48 31 D2 
            65 48 8B 52 60 48 8B 52 18 48 
            8B 52 20 48 8B 72 50 48 0F B7 
            4A 4A 4D 31 C9 48 31 C0 
        }

        // Encrypted payload markers
        $encrypted_payload = { 
            48 8B 05 ?? ?? ?? ?? 48 85 C0 
            74 ?? 48 8B 48 08 48 85 C9 74 
        }

        // Anti-analysis techniques
        $anti_debug1 = "IsDebuggerPresent" ascii wide
        $anti_debug2 = "CheckRemoteDebuggerPresent" ascii wide
        
        // Obfuscation markers
        $obfuscation1 = /\b(b64|base64|decode|xor)\b/ ascii wide

    condition:
        // Strict conditions to reduce false positives
        filesize > 10KB and filesize < 500KB and
        (
            2 of ($shellcode_indicator1, $encrypted_payload) or
            (1 of ($anti_debug*) and 1 of ($obfuscation1))
        )
}

rule Advanced_HID_Payload {
    meta:
        description = "Detects advanced HID attack payloads with specific characteristics"
        author = "USBShield Research Team"
        severity = "high"
        reference = "HID Attack Vector Research"

    strings:
        // Specific HID payload markers
        $hid_trigger1 = "keyboard_layout" ascii wide
        $hid_trigger2 = "inject_command" ascii wide
        
        // PowerShell specific markers
        $ps_obfuscation1 = "-EncodedCommand" ascii wide
        $ps_obfuscation2 = "FromBase64String" ascii wide
        
        // Windows API calls often used in HID attacks
        $win_api1 = "SendInput" ascii wide
        $win_api2 = "keybd_event" ascii wide
        
        // Specific attack sequence indicators
        $attack_seq1 = { 
            6A ?? 68 ?? ?? ?? ?? E8 ?? ?? ?? ?? 
            83 C4 08 85 C0 0F 84 ?? ?? ?? ?? 
        }

    condition:
        filesize < 100KB and
        (
            (2 of ($hid_trigger*) and 1 of ($ps_obfuscation*)) or
            (1 of ($win_api*) and $attack_seq1)
        )
}

rule Evasive_USB_Malware {
    meta:
        description = "Detects evasive malware techniques specific to USB propagation"
        author = "USBShield Research Team"
        severity = "high"
        reference = "Evasive Malware Techniques"

    strings:
        // Specific evasion technique markers
        $evasion_technique1 = "IsWindowsContainer" ascii wide
        $evasion_technique2 = "GetSystemTimeAsFileTime" ascii wide
        
        // Sandbox/VM detection
        $vm_detect1 = "VirtualBox" ascii wide
        $vm_detect2 = "VMware" ascii wide
        $vm_detect3 = "QEMU" ascii wide
        
        // Unique identifier markers
        $unique_marker1 = { 
            48 8D 0D ?? ?? ?? ?? E8 ?? ?? ?? ?? 
            48 85 C0 0F 84 ?? ?? ?? ?? 48 8B 
        }

    condition:
        filesize > 20KB and filesize < 300KB and
        (
            (1 of ($evasion_technique*) and 1 of ($vm_detect*)) or
            $unique_marker1
        )
}

rule Targeted_Reconnaissance_Payload {
    meta:
        description = "Detects USB-based reconnaissance payloads with specific data exfiltration techniques"
        author = "USBShield Research Team"
        severity = "critical"
        reference = "Data Exfiltration Techniques"

    strings:
        // System information gathering
        $recon_str1 = "GetUserNameEx" ascii wide
        $recon_str2 = "GetComputerNameEx" ascii wide
        $recon_str3 = "GetAdaptersInfo" ascii wide
        
        // Exfiltration techniques
        $exfil_technique1 = "WinHttpOpen" ascii wide
        $exfil_technique2 = "InternetOpenUrl" ascii wide
        
        // Data collection markers
        $data_collect1 = /\b(credentials|password|token)\b/ ascii wide
        $data_collect2 = "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run" ascii wide

        // Unique payload signature
        $payload_sig = { 
            55 8B EC 83 EC 08 53 56 57 8B 
            7D 08 8B D7 8B CF F3 A4 
        }

    condition:
        filesize > 50KB and filesize < 200KB and
        (
            (2 of ($recon_str*) and 1 of ($exfil_technique*)) or
            (1 of ($data_collect*) and $payload_sig)
        )
}